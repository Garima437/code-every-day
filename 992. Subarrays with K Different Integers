class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
        return atMost(nums,k)-atMost(nums,k-1);
  
    }
    private int atMost(int[] nums,int k){
        int n=nums.length;
        int l=0,r=0,cnt=0;
        if(k<0) return 0;
        HashMap<Integer ,Integer> mp=new HashMap<>();
        while(r<n){
            mp.put(nums[r],mp.getOrDefault(nums[r],0)+1);
            while(mp.size()>k){
                mp.put(nums[l],mp.get(nums[l])-1);
                if(mp.get(nums[l])==0){
                    mp.remove(nums[l]);
                    
                }
                l++;
            }
            cnt=cnt+(r-l+1);
            r=r+1;
        }
        return cnt;
    }
}
